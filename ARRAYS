//ARRAYS
let faveFood = ['cheese', 'pancakes', 'courgette', 'beans']
console.log(faveFood[2]); // logs 'courgette
faveFood[2] = 'broccoli';
console.log(faveFood[2]); // logs 'broccoli'

// length

const objectives = ['Learn a new languages', 'Read 52 books', 'Run a marathon'];
console.log(objectives.length); // logs 3
console.log(objectives[2].length); // logs 14

// push and pop 

const colours = ['red', 'orange', 'yellow', 'green'];
console.log(colours);

colours.push('blue', 'indigo'); // adds two strings to the end of the 
console.log(colours);

const chores = ['wash dishes', 'do laundry', 'take out trash', 'cook dinner', 'mop floor'];
console.log(chores);
chores.pop() // removes last item from array 
console.log(chores);

// other examples

const groceryList = ['orange juice', 'bananas', 'coffee beans', 'brown rice', 'pasta', 'coconut oil', 'plantains'];
groceryList.shift(); // removes first item
console.log(groceryList);
groceryList.unshift('popcorn'); // adds to beginning of array 
console.log(groceryList); 
console.log(groceryList.slice(1,4)); // creates a slice between array items 1-4
console.log(groceryList);
const pastaIndex = groceryList.indexOf('pasta');
console.log(pastaIndex); // says which number of the array pasta is

// functions and arrays

const arrExample = ['remove', 'the', 'last', 'word', 'of this', 'array', 'carrot']; 
console.log(arrExample); 

function getRid(roArr){
  roArr.pop();    // removes the last item in the array 
}
getRid(arrExample);
console.log(arrExample); 

function newWord(arrEx){
  arrEx[5] = 'sentence'; // changes the sixth item in the array 
}
newWord(arrExample);
console.log(arrExample);

// nested arrays 

const nestingTime = [['one bird', 'another bird'], ['pelican', 'peacock'], ['oiseau', 'das Huhn']]; // a nest of arrays 
const someBirds = nestingTime[1][1]; // makes a variable which selects 'peacock' from the array 
console.log(someBirds); // logs this variable 

// FOR EACH ITERATIONS 

const fruits = ['mango', 'papaya', 'pineapple', 'apple'];

fruits.forEach(function(toEat){
  console.log('I want to eat ' + toEat)
});  // long function 

fruits.forEach(toEat => 
console.log('I want to eat a '+ toEat));  // shortform function 

// MAP METHOD

const animals = ['Hen', 'elephant', 'llama', 'leopard', 'ostrich', 'Whale', 'octopus', 'rabbit', 'lion', 'dog'];

const secretMessage = animals.map( word => {
  return word[0];
}) // the map method returns a new array using the argument passed through it, in this case word [0] calls the first character of each string. 

console.log(secretMessage.join('')); // logs the new array 

const bigNumbers = [100, 200, 300, 400, 500];

const smallNumbers = bigNumbers.map( number => {
  return number / 100; 
}) // divides all the numbers in the array by 100

console.log(smallNumbers) // will just log the array 
console.log(smallNumbers.join('')); // will log the array as a series of strings 

// FILTER METHOD 

const randomNumbers = [375, 200, 3.14, 7, 13, 852];

const smallNumbers = randomNumbers.filter(number =>
{ return number < 250}) // filters out all numbers which are below 250

console.log(smallNumbers.join(',')); // logs to the console as strings with a comma between them 

// with strings

const favoriteWords = ['nostalgia', 'hyperbole', 'fervent', 'esoteric', 'serene'];

const longFavoriteWords = favoriteWords.filter(words => {
  return words.length > 7;
}) // filters out words which are longer than 7 letters long 

console.log(longFavoriteWords.join(', ')); // logs to the console as strings with a comma between them

// INDEX OF

const animals = ['hippo', 'tiger', 'lion', 'seal', 'cheetah', 'monkey', 'salamander', 'elephant'];

const foundAnimal = animals.findIndex (find =>{
  return find === 'elephant'; 
}) // finds the first element in the array that matches 'elephant' 
console.log(foundAnimal); // returns 7

const startsWithS = animals.findIndex (sanimal => {
  return sanimal.charAt(0) === 's';  
}) // finds the first element in the array that starts with S 
console.log(startsWithS); // returns 3

// REDUCE (THIS IS HARD!!!!! DO MORE RESEARCH ON THIS

const newNumbers = [1, 3, 5, 7];

const newSum = newNumbers.reduce((accumulator, currentValue) => {
  console.log('The value of accumulator: ', accumulator); 
  console.log('The value of currentValue:', 
  currentValue) 
  return accumulator + currentValue
}, 10); 

console.log(newSum); 

// MORE ITERATORS

const words = ['unique', 'uncanny', 'pique', 'oxymoron', 'guise'];

// Something is missing in the method call below

console.log(words.some((word) => {
  return word.length < 6;
})); // checks if there are some words in the array that are smaller than 6 

const interestingWords = words.filter(word => {
  return word.length > 5;
}) // filters the words in the array that are longer than five letters 


console.log(interestingWords.every((word) => { 
  return word.length > 5;
} )); // checks if every word in the interestingWords is more than five letters long 

// test 

const cities = ['Orlando', 'Dubai', 'Edinburgh', 'Chennai', 'Accra', 'Denver', 'Eskisehir', 'Medellin', 'Yokohama'];

const nums = [1, 50, 75, 200, 350, 525, 1000];

//  Choose a method that will return undefined
cities.forEach(city => console.log('Have you visited ' + city + '?'));

// Choose a method that will return a new array
const longCities = cities.filter(city => city.length > 7);

// Choose a method that will return a single value
const word = cities.reduce((acc, currVal) => {
  return acc + currVal[0]
}, "C");

console.log(word)

// Choose a method that will return a new array
const smallerNums = nums.map(num => num - 5);

// Choose a method that will return a boolean value
nums.every(num => num < 0);
// OR nums.some(num => num < 0);

